name: Build and deploy

env:
  APP_NAME: openmc_lite

on:
  push:
    tags:
      - "*"

jobs:
  build:
    env:
      OPENMC_ENCRYPT_KEY: ${{ secrets.OPENMC_ENCRYPT_KEY }}
      LITCRYPT_ENCRYPT_KEY: ${{ secrets.LITCRYPT_ENCRYPT_KEY }}
    strategy:
      fail-fast: false
      matrix:
        rust_version: [stable]
        platform:
          - target: x86_64-pc-windows-msvc
            os: windows-latest
            ext: ".exe"
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            ext: ""
          - target: x86_64-apple-darwin
            os: macos-latest
            ext: ""

    runs-on: ${{ matrix.platform.os }}

    steps:
      - uses: actions/checkout@v2
      - uses: dsherret/rust-toolchain-file@v1
      - name: Get current date
        run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Cache cargo registry
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/registry
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-registry-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-registry-
      - name: Cache cargo index
        uses: actions/cache@v2.1.4
        with:
          path: ~/.cargo/git
          # Add date to the cache to keep it up to date
          key: ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}-${{ env.CURRENT_DATE }}
          # Restore from outdated cache for speed
          restore-keys: |
            ${{ matrix.platform }}-stable-cargo-index-${{ hashFiles('Cargo.toml') }}
            ${{ matrix.platform }}-stable-cargo-index-
      - name: Install packages (Linux)
        if: runner.os == 'Linux'
        uses: rerun-io/cache-apt-pkgs-action@59534850182063abf1b2c11bb3686722a12a8397
        with:
          packages: libxcb-render0-dev libxcb-shape0-dev libxcb-xfixes0-dev libxkbcommon-dev libssl-dev libgtk-3-dev # libgtk-3-dev is used by rfd
          version: 1.0
          execute_install_scripts: true
      - name: build release
        run: cargo build --release --target ${{ matrix.platform.target }}
      - name: Rename build
        run: |
          cp target/${{ matrix.platform.target }}/release/${{ env.APP_NAME }}${{ matrix.platform.ext }} ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
      - name: Upload artifact
        uses: actions/upload-artifact@master
        with:
          name: ${{ env.APP_NAME }}_${{ matrix.platform.target }}
          path: ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          prerelease: ${{ contains(github.ref_name, 'a') }}
          files: ${{ env.APP_NAME }}_${{ matrix.platform.target }}${{ matrix.platform.ext }}
